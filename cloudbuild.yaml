steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: ["-c", "docker build --build-arg MASTER_KEY=$$RAILS_KEY --build-arg RAILS_ENV=${_RAILS_ENV} --platform linux/amd64 -t gcr.io/learn-community-345904/${_SERVICE_NAME} ."]
    secretEnv: ["RAILS_KEY"]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/learn-community-345904/${_SERVICE_NAME}"]

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    entrypoint: "bash"
    args:
      [
        "-c",
        "/buildstep/execute.sh -i gcr.io/learn-community-345904/${_SERVICE_NAME} -s learn-community-345904:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=$$RAILS_KEY -- bundle exec rails db:migrate"
      ]
    secretEnv: ["RAILS_KEY"]

  - id: 'deploy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        gcloud run deploy $_SERVICE_NAME \
          --image gcr.io/${PROJECT_ID}/${_SERVICE_NAME} \
          --region asia-northeast1 \
          --add-cloudsql-instances ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} \
          --allow-unauthenticated

substitutions:
  _RAILS_ENV: production
  _REGION: asia-northeast1
  _SERVICE_NAME: learn-community-ver2
  _INSTANCE_NAME: learn-community-prd
  _SECRET_NAME: rails-secret

availableSecrets:
  secretManager:
  - versionName: projects/learn-community-345904/secrets/${_SECRET_NAME}/versions/latest
    env: RAILS_KEY

images:
  - "gcr.io/learn-community-345904/${_SERVICE_NAME}"
